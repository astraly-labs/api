[project]
name = "api"
version = "0.1.0"
description = "Interactive API for Pragma Node"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.115.11",
    "uvicorn>=0.31.0",
    "python-dotenv>=1.0.1",
    "requests>=2.31.0",
    "pydantic>=2.10.6",
    "httpx>=0.28.1",
    "pydantic-settings>=2.8.1",
    "opentelemetry-api>=1.23.0",
    "opentelemetry-sdk>=1.23.0",
    "opentelemetry-instrumentation-fastapi>=0.44b0",
    "opentelemetry-instrumentation-logging>=0.44b0",
    "opentelemetry-exporter-otlp>=1.23.0",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["pragma"]

[dependency-groups]
lint = [
    "pre-commit",
    "black",
    "pyupgrade",
    "ruff>=0.7.4",
    "codespell",
]
test = [
    "pytest==7.4.0",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
]

extra = [
    { include-group = "lint" },
    { include-group = "test" },
]

[tool.ruff.lint.isort]
known-third-party = ["pydantic"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff]
line-length = 120
target-version = 'py311'

[tool.ruff.lint]
mccabe = { max-complexity = 14 }
pydocstyle = { convention = 'google' }
select = [
    'F',      # Pyflakes
    'I',      # isort
    'UP',     # pyupgrade
]

[tool.codespell]
skip = '.git,env*,__pycache__,.venv'
ignore-words-list = 'ines,ser'
